name: Nightly

on:
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC

jobs:
  test-against-pre-releases-of-dependencies:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Cache tox environments
      id: cache-min-deps
      uses: actions/cache@v3
      with:
        path: .tox
        key: tox-pre-deps-${{ hashFiles('setup.cfg') }}-${{ hashFiles('setup.py') }}-${{ hashFiles('tests/conftest.py') }}-${{ hashFiles('.github/workflows/tox.yml') }}
    - name: Test with tox
      run: tox -e pre-release
  run-pyright:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3.5.1
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Get npm cache directory
      id: npm-cache
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - uses: actions/cache@v3
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install pyright
      run: sudo npm install -g pyright@"=1.1.285"
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade --upgrade-strategy eager -e .[mushin,tests,datasets]
        pip install matplotlib
    - name: Run pyright basic on src
      run: pyright --lib tests/ src/rai_toolbox/mushin/