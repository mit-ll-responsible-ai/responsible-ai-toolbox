name: Tests

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions

    # - name: Cache tox environments
    #   id: cache-tox
    #   uses: actions/cache@v3
    #   with:
    #     path: .tox
    #     # setup.cfg and pyproject.toml have versioning info that would
    #     # impact the tox environment.
    #     key: tox-${{ matrix.python }}-${{ hashFiles('setup.cfg') }}-${{ hashFiles('setup.py') }}
    - name: Test with tox
      run: tox -e py

  test-on-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Test with tox
      run: tox -e py38

  coverage:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox

    - name: Cache tox environments
      id: cache-tox
      uses: actions/cache@v3
      with:
        path: .tox
        # setup.cfg and pyproject.toml have versioning info that would
        # impact the tox environment.
        key: tox-coverage-${{ hashFiles('setup.cfg') }}-${{ hashFiles('setup.py') }}-${{ hashFiles('tests/conftest.py') }}-${{ hashFiles('.github/workflows/tox.yml') }}

    - name: Measure coverage
      run: tox -e coverage

  run-experiments-checks:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox

    - name: Cache tox environments
      id: cache-experiments
      uses: actions/cache@v3
      with:
        path: .tox
        # setup.cfg and pyproject.toml have versioning info that would
        # impact the tox environment.
        key: tox-experiments-${{ hashFiles('setup.cfg') }}-${{ hashFiles('setup.py') }}-${{ hashFiles('tests/conftest.py') }}-${{ hashFiles('.github/workflows/tox.yml') }}

    - name: Run experiments checks
      run: tox -e experiments-checks

  run-no-mushin:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox

    - name: Cache tox environments
      id: cache-no-mushin
      uses: actions/cache@v3
      with:
        path: .tox
        key: tox-no-mushin-${{ hashFiles('setup.cfg') }}-${{ hashFiles('setup.py') }}-${{ hashFiles('tests/conftest.py') }}-${{ hashFiles('.github/workflows/tox.yml') }}

    - name: Run experiments checks
      run: tox -e no-mushin

  test-minimum-dependencies:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Cache tox environments
      id: cache-min-deps
      uses: actions/cache@v3
      with:
        path: .tox
        key: tox-min-deps-${{ hashFiles('setup.cfg') }}-${{ hashFiles('setup.py') }}-${{ hashFiles('tests/conftest.py') }}-${{ hashFiles('.github/workflows/tox.yml') }}
    - name: Test with tox
      run: tox -e min-deps

  run-pyright:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-node@v2-beta
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Get npm cache directory
      id: npm-cache
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - uses: actions/cache@v2
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install pyright
      run: sudo npm install -g pyright@">1.1.232"
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    - name: Run pyright basic on src
      run: pyright --lib tests/
